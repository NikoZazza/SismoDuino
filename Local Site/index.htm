<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="utf-8">
    <title>Home - SismoDuino</title>
    <link rel="stylesheet" href="./css/bs-min.css">
    <script src="./js/jquery.js"></script>
    <script src="./js/chart.js"></script>
</head>
<body>

<nav class="navbar navbar-default" style="padding 0px">
    <div class="container-fluid">
        <div class="navbar-header">
            <ul class="nav navbar-nav navbar-left">
                <li id="nav_index" class="">
                    <a href="index.htm" class="navbar-brand">SismoDuino</a>
                </li>
            </ul>
        </div>
        <div class="collapse navbar-collapse" id="navbar-collapse">
            <ul class="nav navbar-nav">
                <li id="nav_stats">
                    <a href="stats.htm">Statistiche</a>
                </li>
                <li id="nav_settings">
                    <a href="settings.htm">Impostazioni</a>
                </li>
            </ul>
        </div>
    </div>
</nav>
<div class="container">
    <div align="center">
        <img src="./img/logo.png" style="width:90%">
    </div>
    <br>
</div>
<div class="jumbotron" style="padding: 10px" align="center">
    <b>SismoDuino</b>= <i>prototipo di un sismografo digitale creato con "Arduino"</i>

</div>
<div class="container">
    <br>
    <div class="container" style="margin: 0; padding: 0">
        <div class="col-md-6">
            <div class="panel panel-default" style="min-width: 520px">
                <div class="panel-heading">Ultimi dati del sensore</div>
                <div class="panel-body">
                    <canvas id="myChart" width="500px" height="300px"></canvas>
					<div align="center">
						<b>
						<span style="color: rgb(255,0,0)">g(X)</span>; 
						<span style="color: rgb(0,0, 255)">g(Y)</span>;
						<span style="color: rgb(255,165,0)">g(Z)</span>;
						<span style="color: rgb(225,225,0)">g(Tot)</span>;				
						</b>
					</div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panel-default" style="min-width: 520px">
                <div class="panel-heading">Posizione approssimativa</div>
                <div class="panel-body">
                    <img id="imgMap" src="./img/maps.jpg">
                    <div id="map" style="width: 500px;height:300px; display:none"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="jumbotron container" style="padding: 10px" align="center">
        <div class="col-md-4">Licence GNU v3.0</div>
        <div class="col-md-4"><a align="center" href="https://github.com/xionbig/SismoDuino">Project on GitHub</a></div>
        <div class="col-md-4"><i>Mykola Zatsarynnyy</i></div>
    </div>
    <br><br><br>
</div>
</body>

<script>
    $(document).ready(function () {

        l = location.href;
        l = l.substr(l.lastIndexOf("/") + 1).split(/[?#]/)[0].split(".")[0];
        if(l == "index"){
            document.getElementById("nav_index").className = "active";
            document.title = "Home - SismoDuino";
        }
        if(l == "stats"){
            document.getElementById("nav_stats").className = "active";
            document.title = "Statistiche - SismoDuino";
        }
        if(l == "settings"){
            document.getElementById("nav_settings").className = "active";
            document.title = "Impostazioni - SismoDuino";
        }
        var foo5 = [];
        var foo4 = [];
        var foo3 = [];
        var foo2 = [];
        var foo1 = [];
        var foo = [];
        for (var i = 1; i <= 15; i++) {
            foo1.push(0);
            foo3.push(0);
            foo4.push(0);
            foo5.push(0);
            foo.push("00:00");
            foo2.push(10);

        }
        var data = {
            labels: foo,
            datasets: [
                {
                    fillColor: "rgba(255,187,205,0.5)",
                    strokeColor: "rgba(255,0,0,0.8)",
                    pointColor: "rgba(220,220,220,0)",
                    pointStrokeColor: "",
                    data: foo1
                },
                {
                    fillColor: "rgba(255,0,0,0.3)",
                    strokeColor: "rgba(0,0, 255,0.9)",
                    pointColor: "rgba(151,187,205,0)",
                    pointStrokeColor: "",
                    data: foo3
                },
                {
                    fillColor: "rgba(220,220,220,0.3)",
                    strokeColor: "rgba(255,165,0,0.9)",
                    pointColor: "rgba(151,187,205,0)",
                    pointStrokeColor: "",
                    data: foo4
                },
                {
                    fillColor: "rgba(220,220,220,0.3)",
                    strokeColor: "rgba(255,255,0,0.9)",
                    pointColor: "rgba(151,187,205,0)",
                    pointStrokeColor: "",
                    data: foo5
                },
                {
                    fillColor: "rgba(220,220,220,0)",
                    strokeColor: "rgba(255,255,0,0)",
                    pointColor: "rgba(151,187,205,0)",
                    pointStrokeColor: "rgba(0,0,0,0)",
                    data: foo2
                }

            ]
        }
        var updateData = function (oldData) {
            var labels = oldData["labels"];
            var dataSetA = oldData["datasets"][0]["data"];
            var dataSetB = oldData["datasets"][1]["data"];
            var dataSetC = oldData["datasets"][2]["data"];
            var dataSetD = oldData["datasets"][3]["data"];
            var dataSetE = oldData["datasets"][4]["data"];

            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (xhttp.readyState == 4 && xhttp.status == 200) {
                    var obj = JSON.parse(xhttp.responseText);

                    labels.shift();

                    obj["gx"] = parseFloat(obj["gx"]);
                    obj["gy"] = parseFloat(obj["gy"]);
                    obj["gz"] = parseFloat(obj["gz"]);
                    obj["gt"] = parseFloat(obj["gt"]);
                    labels.push("   " + obj["timestamp"]);
                    dataSetA.push(obj["gx"]);
                    dataSetB.push(obj["gy"]);
                    dataSetC.push(obj["gz"]);
                    dataSetD.push(obj["gt"]);
                    dataSetE.push(10);
                    dataSetA.shift();
                    dataSetB.shift();
                    dataSetC.shift();
                    dataSetD.shift();
                    dataSetE.shift();
                }
            };
            xhttp.open("GET", "ajax_info.txtt?getdata=true", true);
            xhttp.send();
        };

        var optionsAnimation = {
            scaleOverride: true,
            scaleSteps: 20,
            scaleStepWidth: 1,
            scaleStartValue: 0
        }
        var optionsNoAnimation = {
            scaleOverride: false,
            scaleSteps: 10,
            scaleStepWidth: 10,
            scaleStartValue: 0
        }
        //Get the context of the canvas element we want to select
        var ctx = document.getElementById("myChart").getContext("2d");
        var optionsNoAnimation = {animation: false}
        var myNewChart = new Chart(ctx);
        myNewChart.Line(data, optionsAnimation);

        setInterval(function () {
                    updateData(data);
                    myNewChart.Line(data, optionsNoAnimation)
                    ;
                }, 500
        );

        CaricaScript('https://maps.googleapis.com/maps/api/js?key=AIzaSyDwiiU_PgPr62FbQPo7BQoYbM-vngjyq5I', function () {
            var map;
            map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 53.35, lng: 23.06},
                zoom: 3
            });


            document.getElementById("imgMap").style = "display:none";
            document.getElementById("map").style = "width: 500px;height:300px;";

            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (xhttp.readyState == 4 && xhttp.status == 200) {
                    //alert(xhttp.responseText);
                    var obj = JSON.parse(xhttp.responseText);
                    map.setCenter({lat: parseFloat(obj["lat"]), lng: parseFloat(obj["lon"])});
                    map.setZoom(13);
                    var marker = new google.maps.Marker({
                        position: {lat: parseFloat(obj["lat"]), lng: parseFloat(obj["lon"])},
                        map: map,
                        title: 'Posizione del sensore!'
                    });

                }
            };
            xhttp.open("GET", "ajax_info.txtt?getconfig=true", true);
            xhttp.send();

        });
    });

    function CaricaScript(url, callback) {
        var script = document.createElement("script");
        script.type = "text/javascript";

        //se IE
        if (script.readyState) {
            script.onreadystatechange = function () {
                if (script.readyState == "loaded" || script.readyState == "complete") {
                    script.onreadystatechange = null;
                    callback();
                }
            };
        } else {  //Altri
            script.onload = function () {
                callback();
            };
        }

        script.src = url;
        document.getElementsByTagName("head")[0].appendChild(script);
    }
</script>
</html>
